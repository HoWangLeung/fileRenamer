[{"/Users/howangleung/Desktop/Projects/Electron/react-electron-main/src/App.js":"1","/Users/howangleung/Desktop/Projects/Electron/react-electron-main/src/FilesViewer.js":"2","/Users/howangleung/Desktop/Projects/Electron/react-electron-main/src/Icons.js":"3","/Users/howangleung/Desktop/Projects/Electron/react-electron-main/src/index.js":"4"},{"size":3857,"mtime":1665695213463,"results":"5","hashOfConfig":"6"},{"size":780,"mtime":1612026608000,"results":"7","hashOfConfig":"6"},{"size":1242,"mtime":1612026608000,"results":"8","hashOfConfig":"6"},{"size":262,"mtime":1612026608000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"1ks8g65",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/howangleung/Desktop/Projects/Electron/react-electron-main/src/App.js",["19","20","21","22","23","24","25"],"import { useState, useMemo, useEffect } from 'react'\nimport { FilesViewer } from './FilesViewer'\n\nconst fs = window.require('fs')\nconst path = window.require('path')\n\nconst { app } = window.require('@electron/remote')\n\nfunction App() {\n  const targetExt = '.json'\n  const [startPath, setStartPath] = useState('/Users/howangleung/IdeaProjects')\n\n  const [targetFiles, setTargetFiles] = useState([])\n  const [value, setValue] = useState('howang')\n\n  const [updated, setUpdated] = useState(false)\n\n  const fromDir = (startPath, filter) => {\n    if (!fs.existsSync(startPath)) {\n      console.log('no dir ', startPath)\n      return\n    }\n\n    const dirCont = fs.readdirSync(startPath)\n    for (var i = 0; i < dirCont.length; i++) {\n      var filename = path.join(startPath, dirCont[i])\n      var stat = fs.lstatSync(filename)\n\n      if (stat.isDirectory()) {\n        fromDir(filename, filter) //recurse\n      } else if (filename.endsWith(filter)) {\n        if (!targetFiles.includes(filename)) {\n          const newTargetFiles = [...targetFiles]\n          newTargetFiles.push(filename)\n          setTargetFiles(state => [...state, ...newTargetFiles])\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (targetFiles === null || targetFiles.length === 0) {\n      fromDir(startPath, targetExt)\n    }\n  }, [targetFiles])\n\n  useEffect(() => {\n    fromDir(startPath, targetExt)\n    return () => {}\n  }, [startPath])\n\n  useEffect(() => {\n\n    setTargetFiles([])\n    // fromDir(startPath, targetExt)\n  }, [updated])\n\n  const handleRename = file => {\n    let filePath = file.split('.')[0]\n    let fileExt = '.' + file.split('.')[1]\n    let newFilename = `${filePath}-${value}${fileExt}`\n    fs.rename(file, newFilename, function (err) {\n      if (err) console.log('ERROR: ' + err)\n    })\n\n    let newTargetFiles = targetFiles\n    newTargetFiles = newTargetFiles.map(d => {\n      if (d === file) {\n        d = newFilename\n      }\n      return d\n    })\n    setTargetFiles(newTargetFiles)\n  }\n\n  if (targetFiles.length > 0) {\n    targetFiles.forEach((originalDir, i) => {\n      fs.watch(path.parse(originalDir).dir, function (event, filename) {\n        if (filename) {\n          setTargetFiles([])\n        } else {\n          console.log('filename not provided')\n        }\n      })\n    })\n  }\n\n  return (\n    <div className=\"container mt-2\">\n      <div className=\"row justify-content-center align-items-center g-2\">\n        <div className=\"mb-3\">\n          <label htmlFor=\"\" className=\"form-label\">\n            Value to Append\n          </label>\n          <input\n            onChange={e => {\n              setValue(e.target.value)\n            }}\n            type=\"text\"\n            className=\"form-control\"\n            name=\"\"\n            id=\"\"\n            aria-describedby=\"helpId\"\n            placeholder=\"\"\n            value={value}\n          />\n          {/* <small id=\"helpId\" class=\"form-text text-muted\">Help text</small> */}\n        </div>\n      </div>\n\n      {targetFiles.map(file => {\n        return (\n          <div\n            key={file}\n            className=\"w-100 d-flex flex-row justify-content-start align-items-center g-2\"\n          >\n            <li className=\"w-100 mt-2 list-group-item\">{file}</li>\n            <button\n              onClick={() => handleRename(file)}\n              className=\"btn mt-2 btn-primary\"\n            >\n              RENAME\n            </button>\n          </div>\n        )\n      })}\n\n      {/* <h4>{path}</h4>\n      <h1>HELLO WORLD</h1>\n      <div className=\"form-group mt-4 mb-2\">\n        <input\n          value={searchString}\n          onChange={event => setSearchString(event.target.value)}\n          className=\"form-control form-control-sm\"\n          placeholder=\"File search\"\n        />\n      </div>\n      <FilesViewer files={filteredFiles} onBack={onBack} onOpen={onOpen} /> */}\n    </div>\n  )\n}\n\nexport default App\n","/Users/howangleung/Desktop/Projects/Electron/react-electron-main/src/FilesViewer.js",[],"/Users/howangleung/Desktop/Projects/Electron/react-electron-main/src/Icons.js",[],"/Users/howangleung/Desktop/Projects/Electron/react-electron-main/src/index.js",[],{"ruleId":"26","severity":1,"message":"27","line":1,"column":20,"nodeType":"28","messageId":"29","endLine":1,"endColumn":27},{"ruleId":"26","severity":1,"message":"30","line":2,"column":10,"nodeType":"28","messageId":"29","endLine":2,"endColumn":21},{"ruleId":"26","severity":1,"message":"31","line":7,"column":9,"nodeType":"28","messageId":"29","endLine":7,"endColumn":12},{"ruleId":"26","severity":1,"message":"32","line":11,"column":21,"nodeType":"28","messageId":"29","endLine":11,"endColumn":33},{"ruleId":"26","severity":1,"message":"33","line":16,"column":19,"nodeType":"28","messageId":"29","endLine":16,"endColumn":29},{"ruleId":"34","severity":1,"message":"35","line":45,"column":6,"nodeType":"36","endLine":45,"endColumn":19,"suggestions":"37"},{"ruleId":"34","severity":1,"message":"38","line":50,"column":6,"nodeType":"36","endLine":50,"endColumn":17,"suggestions":"39"},"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'FilesViewer' is defined but never used.","'app' is assigned a value but never used.","'setStartPath' is assigned a value but never used.","'setUpdated' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fromDir' and 'startPath'. Either include them or remove the dependency array.","ArrayExpression",["40"],"React Hook useEffect has a missing dependency: 'fromDir'. Either include it or remove the dependency array.",["41"],{"desc":"42","fix":"43"},{"desc":"44","fix":"45"},"Update the dependencies array to be: [fromDir, startPath, targetFiles]",{"range":"46","text":"47"},"Update the dependencies array to be: [fromDir, startPath]",{"range":"48","text":"49"},[1303,1316],"[fromDir, startPath, targetFiles]",[1398,1409],"[fromDir, startPath]"]